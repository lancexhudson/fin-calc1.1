{"ast":null,"code":"var _jsxFileName = \"/Users/lance/Documents/git-workspace/fin-calc1.1/src/components/CompoundGrowthCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { FaSpinner } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompoundGrowthCalculator = () => {\n  _s();\n  const [investmentLength, setInvestmentLength] = useState('');\n  const [userContribution, setUserContribution] = useState('');\n  const [interestRate, setInterestRate] = useState('');\n  const [results, setResults] = useState(null);\n  const [investmentType, setInvestmentType] = useState('');\n  const [historicalData, setHistoricalData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLengthChange = e => {\n    const rawValue = e.target.value.replace(/,/g, '');\n    setInvestmentLength(rawValue);\n  };\n  const handleContributionChange = e => {\n    const rawValue = e.target.value.replace(/,/g, '');\n    setUserContribution(rawValue);\n  };\n  const handleInterestChange = e => {\n    const rawValue = e.target.value.replace(/,/g, '');\n    setInterestRate(rawValue);\n  };\n  const calculateCompoundGrowth = async () => {\n    if (!investmentLength || !userContribution || !interestRate) {\n      toast.error('Please enter all fields.');\n      return;\n    }\n    const length = parseInt(investmentLength);\n    const contribution = parseFloat(userContribution);\n    const interest = parseFloat(interestRate) / 100;\n    if (isNaN(length) || isNaN(contribution) || isNaN(interest) || length <= 0 || contribution <= 0 || interest < 0) {\n      toast.error('Please enter valid positive numbers.');\n      return;\n    }\n    let totalUserStash = 0;\n    let totalInterest = 0;\n    for (let year = 1; year <= length; year++) {\n      totalUserStash += contribution;\n      const interestForThisYear = (totalUserStash + totalInterest) * interest;\n      totalInterest += interestForThisYear;\n    }\n    setResults({\n      contribution: totalUserStash.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }),\n      interest: totalInterest.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }),\n      total: (totalUserStash + totalInterest).toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })\n    });\n    if (investmentType) {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=${investmentType}&apikey=${process.env.REACT_APP_ALPHA_KEY}`);\n        const data = response.data['Monthly Time Series'];\n        const formattedData = Object.keys(data).slice(0, 12).map(date => ({\n          date,\n          close: parseFloat(data[date]['4. close'])\n        })).reverse();\n        setHistoricalData(formattedData);\n      } catch (error) {\n        toast.error('Error fetching historical data.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compound Growth Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Investment Length (years):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: investmentLength,\n          onChange: e => setInvestmentLength(e.target.value),\n          placeholder: \"Enter years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Annual Contribution ($):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userContribution,\n          onChange: e => setUserContribution(e.target.value),\n          placeholder: \"Enter contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Interest Rate (%):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: interestRate,\n          onChange: e => setInterestRate(e.target.value),\n          placeholder: \"Enter rate (0-100)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Investment Type (e.g., SPY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: investmentType,\n          onChange: e => setInvestmentType(e.target.value),\n          placeholder: \"Enter ticker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateCompoundGrowth,\n          disabled: !investmentLength || !userContribution || !interestRate,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `results-card ${!results ? 'collapsed' : ''}`,\n        children: [results && /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Value ($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Contribution\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", results.contribution]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Interest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", results.interest]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Contribution + Interest\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", results.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), historicalData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Historical Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: historicalData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [data.date, \": $\", data.close.toFixed(2)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(FaSpinner, {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(CompoundGrowthCalculator, \"v96nn/4jEPTfK8wXn78ComEd6Sw=\");\n_c = CompoundGrowthCalculator;\nexport default CompoundGrowthCalculator;\nvar _c;\n$RefreshReg$(_c, \"CompoundGrowthCalculator\");","map":{"version":3,"names":["React","useState","axios","toast","FaSpinner","jsxDEV","_jsxDEV","CompoundGrowthCalculator","_s","investmentLength","setInvestmentLength","userContribution","setUserContribution","interestRate","setInterestRate","results","setResults","investmentType","setInvestmentType","historicalData","setHistoricalData","isLoading","setIsLoading","handleLengthChange","e","rawValue","target","value","replace","handleContributionChange","handleInterestChange","calculateCompoundGrowth","error","length","parseInt","contribution","parseFloat","interest","isNaN","totalUserStash","totalInterest","year","interestForThisYear","toLocaleString","minimumFractionDigits","maximumFractionDigits","total","response","get","process","env","REACT_APP_ALPHA_KEY","data","formattedData","Object","keys","slice","map","date","close","reverse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","type","onChange","placeholder","onClick","disabled","index","toFixed","_c","$RefreshReg$"],"sources":["/Users/lance/Documents/git-workspace/fin-calc1.1/src/components/CompoundGrowthCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { FaSpinner } from 'react-icons/fa';\n\nconst CompoundGrowthCalculator = () => {\n  const [investmentLength, setInvestmentLength] = useState('');\n  const [userContribution, setUserContribution] = useState('');\n  const [interestRate, setInterestRate] = useState('');\n  const [results, setResults] = useState(null);\n  const [investmentType, setInvestmentType] = useState('');\n  const [historicalData, setHistoricalData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLengthChange = (e) => {\n    const rawValue = e.target.value.replace(/,/g, '');\n    setInvestmentLength(rawValue);\n  };\n\n  const handleContributionChange = (e) => {\n    const rawValue = e.target.value.replace(/,/g, '');\n    setUserContribution(rawValue);\n  };\n\n  const handleInterestChange = (e) => {\n    const rawValue = e.target.value.replace(/,/g, '');\n    setInterestRate(rawValue);\n  };\n\n  const calculateCompoundGrowth = async () => {\n    if (!investmentLength || !userContribution || !interestRate) {\n      toast.error('Please enter all fields.');\n      return;\n    }\n    const length = parseInt(investmentLength);\n    const contribution = parseFloat(userContribution);\n    const interest = parseFloat(interestRate) / 100;\n    if (\n      isNaN(length) ||\n      isNaN(contribution) ||\n      isNaN(interest) ||\n      length <= 0 ||\n      contribution <= 0 ||\n      interest < 0\n    ) {\n      toast.error('Please enter valid positive numbers.');\n      return;\n    }\n\n    let totalUserStash = 0;\n    let totalInterest = 0;\n    for (let year = 1; year <= length; year++) {\n      totalUserStash += contribution;\n      const interestForThisYear = (totalUserStash + totalInterest) * interest;\n      totalInterest += interestForThisYear;\n    }\n\n    setResults({\n      contribution: totalUserStash.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }),\n      interest: totalInterest.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }),\n      total: (totalUserStash + totalInterest).toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }),\n    });\n\n    if (investmentType) {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=${investmentType}&apikey=${process.env.REACT_APP_ALPHA_KEY}`\n        );\n        const data = response.data['Monthly Time Series'];\n        const formattedData = Object.keys(data)\n          .slice(0, 12)\n          .map((date) => ({\n            date,\n            close: parseFloat(data[date]['4. close']),\n          }))\n          .reverse();\n        setHistoricalData(formattedData);\n      } catch (error) {\n        toast.error('Error fetching historical data.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"calculator-section\">\n      <h2>Compound Growth Calculator</h2>\n      <div style={{ display: 'flex', gap: '20px' }}>\n        <div className=\"input-group\">\n          <label>Investment Length (years):</label>\n          <input\n            type=\"number\"\n            value={investmentLength}\n            onChange={(e) => setInvestmentLength(e.target.value)}\n            placeholder=\"Enter years\"\n          />\n          <label>Annual Contribution ($):</label>\n          <input\n            type=\"number\"\n            value={userContribution}\n            onChange={(e) => setUserContribution(e.target.value)}\n            placeholder=\"Enter contribution\"\n          />\n          <label>Interest Rate (%):</label>\n          <input\n            type=\"number\"\n            value={interestRate}\n            onChange={(e) => setInterestRate(e.target.value)}\n            placeholder=\"Enter rate (0-100)\"\n          />\n          <label>Investment Type (e.g., SPY):</label>\n          <input\n            type=\"text\"\n            value={investmentType}\n            onChange={(e) => setInvestmentType(e.target.value)}\n            placeholder=\"Enter ticker\"\n          />\n          <button\n            onClick={calculateCompoundGrowth}\n            disabled={!investmentLength || !userContribution || !interestRate}\n          >\n            Calculate\n          </button>\n        </div>\n        <div className={`results-card ${!results ? 'collapsed' : ''}`}>\n          {results && (\n            <table>\n              <thead>\n                <tr>\n                  <th>Metric</th>\n                  <th>Value ($)</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Total Contribution</td>\n                  <td>${results.contribution}</td>\n                </tr>\n                <tr>\n                  <td>Total Interest</td>\n                  <td>${results.interest}</td>\n                </tr>\n                <tr>\n                  <td>Contribution + Interest</td>\n                  <td>${results.total}</td>\n                </tr>\n              </tbody>\n            </table>\n          )}\n          {historicalData.length > 0 && (\n            <div>\n              <h3>Historical Data</h3>\n              <ul>\n                {historicalData.map((data, index) => (\n                  <li key={index}>\n                    {data.date}: ${data.close.toFixed(2)}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          {isLoading && <FaSpinner className=\"loading\" />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CompoundGrowthCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}