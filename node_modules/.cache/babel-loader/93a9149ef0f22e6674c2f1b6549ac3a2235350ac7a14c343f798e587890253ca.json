{"ast":null,"code":"var _jsxFileName = \"/Users/lance/Documents/git-workspace/fin-calc1.1/src/components/SavingsRateCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { FaSpinner } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavingsRateCalculator = () => {\n  _s();\n  const [annualSalary, setAnnualSalary] = useState('');\n  const [percentBeingSaved, setPercentBeingSaved] = useState('');\n  const [results, setResults] = useState(null);\n  const [investmentType, setInvestmentType] = useState('');\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showHistorical, setShowHistorical] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to format input value with commas\n  const formatInput = value => {\n    if (!value) return '';\n    const num = parseFloat(value.replace(/,/g, '')); // Remove commas to parse\n    if (isNaN(num)) return '';\n    return num.toLocaleString('en-US');\n  };\n  const handleSalaryChange = e => {\n    const rawValue = e.target.value.replace(/,/g, ''); // Get raw number\n    setAnnualSalary(rawValue);\n  };\n  const handlePercentChange = e => {\n    const rawValue = e.target.value.replace(/,/g, ''); // Get raw number\n    setPercentBeingSaved(rawValue);\n  };\n  const calculateSavingsRate = async () => {\n    if (!annualSalary || !percentBeingSaved) {\n      toast.error('Please enter both annual salary and percent being saved.');\n      return;\n    }\n    const salary = parseFloat(annualSalary);\n    const percent = parseFloat(percentBeingSaved) / 100;\n    if (isNaN(salary) || isNaN(percent) || salary <= 0 || percent < 0 || percent > 1) {\n      toast.error('Please enter valid positive numbers for salary and 0-100 for percent.');\n      return;\n    }\n    const weeklySavings = salary * percent / 52;\n    const biWeeklySavings = salary * percent / 26;\n    const monthlySavings = salary * percent / 12;\n    const annualSavings = salary * percent;\n    setResults({\n      weekly: weeklySavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }),\n      biWeekly: biWeeklySavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }),\n      monthly: monthlySavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }),\n      annual: annualSavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })\n    });\n    if (investmentType) {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=${investmentType}&apikey=${process.env.REACT_APP_ALPHA_KEY}`);\n        const data = response.data['Monthly Time Series'];\n        const dates = Object.keys(data).slice(0, 12).reverse();\n        const historicalData = [];\n        for (let i = 0; i < dates.length - 1; i++) {\n          const currentClose = parseFloat(data[dates[i]]['4. close']);\n          const nextClose = parseFloat(data[dates[i + 1]]['4. close']);\n          const ror = (nextClose - currentClose) / currentClose * 100; // Percentage change\n          historicalData.push({\n            date: dates[i],\n            ror: ror.toFixed(2) + '%'\n          });\n        }\n        setHistoricalData(historicalData);\n      } catch (error) {\n        toast.error('Error fetching historical data.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const toggleCollapse = () => setResults(results ? null : results); // Toggle collapse\n  const toggleHistorical = () => setShowHistorical(!showHistorical);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Savings Rate Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formatInput(annualSalary),\n          onChange: handleSalaryChange,\n          placeholder: \"Enter salary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Percent Being Saved (%):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formatInput(percentBeingSaved),\n          onChange: handlePercentChange,\n          placeholder: \"Enter percent (0-100)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Investment Type (e.g., SPY):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: investmentType,\n          onChange: e => setInvestmentType(e.target.value),\n          placeholder: \"Enter ticker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateSavingsRate,\n          disabled: !annualSalary || !percentBeingSaved,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `results-card ${!results ? 'collapsed' : ''}`,\n        children: results && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"collapse-btn\",\n            onClick: toggleCollapse,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Period\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Value ($)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", results.weekly]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bi-Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", results.biWeekly]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", results.monthly]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Annual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", results.annual]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), investmentType && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleHistorical,\n            children: showHistorical ? 'Hide Historical RoR' : 'Show Historical RoR'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), showHistorical && historicalData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Historical Rate of Return\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: historicalData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [data.date, \": \", data.ror]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(FaSpinner, {\n            className: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(SavingsRateCalculator, \"dZ77SdvjxMOc55UyTj0cuaUHAkU=\");\n_c = SavingsRateCalculator;\nexport default SavingsRateCalculator;\nvar _c;\n$RefreshReg$(_c, \"SavingsRateCalculator\");","map":{"version":3,"names":["React","useState","axios","toast","FaSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","SavingsRateCalculator","_s","annualSalary","setAnnualSalary","percentBeingSaved","setPercentBeingSaved","results","setResults","investmentType","setInvestmentType","historicalData","setHistoricalData","showHistorical","setShowHistorical","isLoading","setIsLoading","formatInput","value","num","parseFloat","replace","isNaN","toLocaleString","handleSalaryChange","e","rawValue","target","handlePercentChange","calculateSavingsRate","error","salary","percent","weeklySavings","biWeeklySavings","monthlySavings","annualSavings","weekly","minimumFractionDigits","maximumFractionDigits","biWeekly","monthly","annual","response","get","process","env","REACT_APP_ALPHA_KEY","data","dates","Object","keys","slice","reverse","i","length","currentClose","nextClose","ror","push","date","toFixed","toggleCollapse","toggleHistorical","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","type","onChange","placeholder","onClick","disabled","map","index","_c","$RefreshReg$"],"sources":["/Users/lance/Documents/git-workspace/fin-calc1.1/src/components/SavingsRateCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { FaSpinner } from 'react-icons/fa';\n\nconst SavingsRateCalculator = () => {\n  const [annualSalary, setAnnualSalary] = useState('');\n  const [percentBeingSaved, setPercentBeingSaved] = useState('');\n  const [results, setResults] = useState(null);\n  const [investmentType, setInvestmentType] = useState('');\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showHistorical, setShowHistorical] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to format input value with commas\n  const formatInput = (value) => {\n    if (!value) return '';\n    const num = parseFloat(value.replace(/,/g, '')); // Remove commas to parse\n    if (isNaN(num)) return '';\n    return num.toLocaleString('en-US');\n  };\n\n  const handleSalaryChange = (e) => {\n    const rawValue = e.target.value.replace(/,/g, ''); // Get raw number\n    setAnnualSalary(rawValue);\n  };\n\n  const handlePercentChange = (e) => {\n    const rawValue = e.target.value.replace(/,/g, ''); // Get raw number\n    setPercentBeingSaved(rawValue);\n  };\n\n  const calculateSavingsRate = async () => {\n    if (!annualSalary || !percentBeingSaved) {\n      toast.error('Please enter both annual salary and percent being saved.');\n      return;\n    }\n    const salary = parseFloat(annualSalary);\n    const percent = parseFloat(percentBeingSaved) / 100;\n    if (\n      isNaN(salary) ||\n      isNaN(percent) ||\n      salary <= 0 ||\n      percent < 0 ||\n      percent > 1\n    ) {\n      toast.error(\n        'Please enter valid positive numbers for salary and 0-100 for percent.'\n      );\n      return;\n    }\n\n    const weeklySavings = (salary * percent) / 52;\n    const biWeeklySavings = (salary * percent) / 26;\n    const monthlySavings = (salary * percent) / 12;\n    const annualSavings = salary * percent;\n\n    setResults({\n      weekly: weeklySavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }),\n      biWeekly: biWeeklySavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }),\n      monthly: monthlySavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }),\n      annual: annualSavings.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }),\n    });\n\n    if (investmentType) {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=${investmentType}&apikey=${process.env.REACT_APP_ALPHA_KEY}`\n        );\n        const data = response.data['Monthly Time Series'];\n        const dates = Object.keys(data).slice(0, 12).reverse();\n        const historicalData = [];\n        for (let i = 0; i < dates.length - 1; i++) {\n          const currentClose = parseFloat(data[dates[i]]['4. close']);\n          const nextClose = parseFloat(data[dates[i + 1]]['4. close']);\n          const ror = ((nextClose - currentClose) / currentClose) * 100; // Percentage change\n          historicalData.push({ date: dates[i], ror: ror.toFixed(2) + '%' });\n        }\n        setHistoricalData(historicalData);\n      } catch (error) {\n        toast.error('Error fetching historical data.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const toggleCollapse = () => setResults(results ? null : results); // Toggle collapse\n  const toggleHistorical = () => setShowHistorical(!showHistorical);\n\n  return (\n    <div className=\"calculator-section\">\n      <h2>Savings Rate Calculator</h2>\n      <div style={{ display: 'flex', gap: '20px' }}>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={formatInput(annualSalary)}\n            onChange={handleSalaryChange}\n            placeholder=\"Enter salary\"\n          />\n          <label>Percent Being Saved (%):</label>\n          <input\n            type=\"text\"\n            value={formatInput(percentBeingSaved)}\n            onChange={handlePercentChange}\n            placeholder=\"Enter percent (0-100)\"\n          />\n          <label>Investment Type (e.g., SPY):</label>\n          <input\n            type=\"text\"\n            value={investmentType}\n            onChange={(e) => setInvestmentType(e.target.value)}\n            placeholder=\"Enter ticker\"\n          />\n          <button\n            onClick={calculateSavingsRate}\n            disabled={!annualSalary || !percentBeingSaved}\n          >\n            Calculate\n          </button>\n        </div>\n        <div className={`results-card ${!results ? 'collapsed' : ''}`}>\n          {results && (\n            <>\n              <button className=\"collapse-btn\" onClick={toggleCollapse}>\n                X\n              </button>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Period</th>\n                    <th>Value ($)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Weekly</td>\n                    <td>${results.weekly}</td>\n                  </tr>\n                  <tr>\n                    <td>Bi-Weekly</td>\n                    <td>${results.biWeekly}</td>\n                  </tr>\n                  <tr>\n                    <td>Monthly</td>\n                    <td>${results.monthly}</td>\n                  </tr>\n                  <tr>\n                    <td>Annual</td>\n                    <td>${results.annual}</td>\n                  </tr>\n                </tbody>\n              </table>\n              {investmentType && (\n                <button onClick={toggleHistorical}>\n                  {showHistorical\n                    ? 'Hide Historical RoR'\n                    : 'Show Historical RoR'}\n                </button>\n              )}\n              {showHistorical && historicalData.length > 0 && (\n                <div>\n                  <h3>Historical Rate of Return</h3>\n                  <ul>\n                    {historicalData.map((data, index) => (\n                      <li key={index}>\n                        {data.date}: {data.ror}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              {isLoading && <FaSpinner className=\"loading\" />}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SavingsRateCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}